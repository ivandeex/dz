---
- name: setup honcho environment
  hosts: linux-build
  tags: env
  become: false
  gather_facts: false
  tasks:
    - name: add public settings to .env
      lineinfile: dest=../.env create=yes mode=0600
                  regexp='^{{ item|upper }}='
                  line='{{ item|upper }}="{{ public[item] }}"'
      with_items: '{{ public.keys() | sort }}'

    - name: add non-public settings to .env
      lineinfile: dest=../.env create=yes mode=0600
                  regexp='^{{ item|upper }}='
                  line='{{ item|upper }}="{{ secret[item] }}"'
      with_items: '{{ secret.keys() | sort }}'


- name: o/s packages
  hosts: linux-build
  tags: install
  become: true
  gather_facts: false
  tasks:
    - name: install required o/s packages
      apt: pkg={{item}}
      with_items:
        - gettext  # for translations
        - build-essential
        - libpython-dev
        - libffi-dev
        - libssl-dev
        - libjpeg-dev
        - libxml2-dev
        - libxslt1-dev


- name: setup database
  hosts: linux-build
  tags: db
  become: true
  become_user: postgres
  gather_facts: false
  tasks:
    - name: create django database
      postgresql_db: port={{postgres.port}} name={{postgres.database}}
                     template='template0' encoding='UTF-8'
                     lc_collate='en_US.UTF-8' lc_ctype='en_US.UTF-8'

    - name: create database user
      postgresql_user: port={{postgres.port}} db={{postgres.database}}
                       name={{postgres.username}} password={{postgres.password}}

    # We do not let django tests create/drop test database for security reasons.
    # The test database is created below:
    - name: create test database
      postgresql_db: port={{postgres.port}} name=test_{{postgres.database}}
                     owner={{postgres.username}}
                     template='template0' encoding='UTF-8'
                     lc_collate='en_US.UTF-8' lc_ctype='en_US.UTF-8'


- name: node.js packages
  hosts: linux-build
  tags: npm
  gather_facts: false
  tasks:
    - name: install npm binary
      apt: name=npm
      become: true

    - name: install global npm packages
      npm: name={{item}} global=yes
      with_items:
        - webpack
        - webpack-dev-server
        - eslint
        - eslint-config-google
        - sass-lint
      become: true

    - name: install local package.json packages
      npm: path={{inventory_dir|dirname}}
      become: false


- name: install phantomjs
  hosts: linux-build
  tags: phantomjs
  become: true
  gather_facts: false
  vars:
    phantomjs_version: 'phantomjs-2.1.1-linux-x86_64'
  tasks:
    - name: remove broken phantomjs .deb package
      # see http://stackoverflow.com/questions/36770303/phantomjs-with-selenium-unable-to-load-atom-find-element#36800913
      apt: name=phantomjs state=absent

    - name: download phantomjs from official site
      unarchive:
        src: https://bitbucket.org/ariya/phantomjs/downloads/{{phantomjs_version}}.tar.bz2
        dest: /usr/local
        copy: no
        creates: '/usr/local/{{phantomjs_version}}'

    - name: create link to phantomjs binary
      file:
        state: link
        src: ../{{phantomjs_version}}/bin/phantomjs
        dest: /usr/local/bin/phantomjs


- name: install travis client
  hosts: linux-build
  tags: travis
  become: true
  gather_facts: false
  tasks:
    - name: install ruby
      apt: name={{item}}
      with_items:
        - ruby
        - ruby-dev
    - name: install travis client
      command: gem install travis --no-rdoc --no-ri
               creates=/usr/local/bin/travis
...
